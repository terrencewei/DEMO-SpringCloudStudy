buildscript {
    repositories {
        maven { url "https://repo.spring.io/libs-release" }
        jcenter()
        mavenLocal()
        mavenCentral()
        maven { url "http://repo.spring.io/snapshot" }
        maven { url "http://repo.spring.io/milestone" }
        maven { url "http://repo.spring.io/release" }
    }

    dependencies {
        classpath "org.springframework.boot:spring-boot-gradle-plugin:2.0.5.RELEASE"
        classpath "org.springframework.cloud:spring-cloud-contract-gradle-plugin:2.0.1.RELEASE"
    }
}
plugins {
    id "org.springframework.boot" version "2.0.5.RELEASE"
}

ext {
libs = [
        springcloud: [
                "org.springframework.boot:spring-boot-starter",
                "org.springframework.boot:spring-boot-starter-actuator",
                "org.springframework.cloud:spring-cloud-starter-netflix-hystrix",
                "org.springframework.cloud:spring-cloud-starter-config",
                "org.springframework.cloud:spring-cloud-starter-openfeign",
                "org.springframework.cloud:spring-cloud-starter-netflix-turbine",
                "org.springframework.cloud:spring-cloud-starter-netflix-eureka-client",
                "org.springframework.cloud:spring-cloud-starter-netflix-eureka-server"
        ],
        log: [
                "org.projectlombok:lombok"
        ],
        web: [
                "org.springframework.boot:spring-boot-starter-web",
                "org.springframework.boot:spring-boot-starter-security",
                "org.apache.commons:commons-lang3"
        ],
        data: [
                "org.springframework.data:spring-data-commons",
                "org.springframework.boot:spring-boot-starter-data-jpa",
                "org.springframework.boot:spring-boot-starter-data-redis",
                "net.java.dev.jna:jna",
                "redis.clients:jedis",
                "mysql:mysql-connector-java"
        ],
        jsp: [
                "javax.servlet:javax.servlet-api",
                "javax.servlet:jstl",
                "org.springframework.boot:spring-boot-starter-tomcat"
        ],
        test       : [
                "org.springframework.boot:spring-boot-starter-test",
                "org.springframework.security:spring-security-test",
                "org.springframework.cloud:spring-cloud-starter-contract-verifier"
        ]
]
}

allprojects {
    apply plugin: 'eclipse'
    apply plugin: 'idea'
    apply plugin: 'maven'
    apply plugin: 'org.springframework.boot'

    repositories {
        jcenter()
        mavenLocal()
        mavenCentral()
        maven { url "http://repo.spring.io/snapshot" }
        maven { url "http://repo.spring.io/milestone" }
        maven { url "http://repo.spring.io/release" }
        maven { url 'http://maven.aliyun.com/nexus/content/groups/public/' }
        maven { url "https://repo.spring.io/libs-release" }
        maven { url "http://repo.spring.io/libs-milestone" }
        maven { url 'https://repo.spring.io/libs-snapshot' }
        maven { url "http://maven.springframework.org/milestone" }
        maven { url "http://maven.springframework.org/snapshot" }
    }
}
subprojects {

    apply plugin: 'java'
    apply plugin: 'org.springframework.boot'
    apply plugin: 'io.spring.dependency-management'

    sourceCompatibility = 1.8
    targetCompatibility = 1.8

    dependencyManagement {
        imports {
            mavenBom 'org.springframework.cloud:spring-cloud-dependencies:Finchley.SR1'
            mavenBom 'org.springframework.cloud:spring-cloud-contract-dependencies:2.0.1.RELEASE'
        }
    }

    artifactId = it.name

    tasks.withType(JavaCompile) {
        options.encoding = "UTF-8"
    }
}

